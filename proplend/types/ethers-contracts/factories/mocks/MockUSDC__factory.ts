/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { MockUSDC, MockUSDCInterface } from "../../mocks/MockUSDC.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "allowance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "ERC20InsufficientAllowance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "ERC20InsufficientBalance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "approver",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidApprover",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidReceiver",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidSender",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidSpender",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "mint",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amountInDollars",
        "type": "uint256"
      }
    ],
    "name": "mintDollars",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f80fd5b50604051806040016040528060088152602001672aa9a21021b7b4b760c11b815250604051806040016040528060048152602001635553444360e01b815250816003908161005d919061010a565b50600461006a828261010a565b5050506101c9565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061009a57607f821691505b6020821081036100b857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561010557805f5260205f20601f840160051c810160208510156100e35750805b601f840160051c820191505b81811015610102575f81556001016100ef565b50505b505050565b81516001600160401b0381111561012357610123610072565b610137816101318454610086565b846100be565b602080601f83116001811461016a575f84156101535750858301515b5f19600386901b1c1916600185901b1785556101c1565b5f85815260208120601f198616915b8281101561019857888601518255948401946001909101908401610179565b50858210156101b557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6108aa806101d65f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806340c10f191161006e57806340c10f191461011f57806370a082311461013457806395d89b411461015c578063a9059cbb14610164578063afd1b7df14610177578063dd62ed3e1461018a575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c2565b6040516100bf91906105f7565b60405180910390f35b6100db6100d636600461065e565b610252565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610686565b61026b565b604051600681526020016100bf565b61013261012d36600461065e565b61028e565b005b6100ef6101423660046106bf565b6001600160a01b03165f9081526020819052604090205490565b6100b261029c565b6100db61017236600461065e565b6102ab565b61013261018536600461065e565b6102b8565b6100ef6101983660046106df565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101d190610710565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd90610710565b80156102485780601f1061021f57610100808354040283529160200191610248565b820191905f5260205f20905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b5f3361025f8185856102e0565b60019150505b92915050565b5f336102788582856102ed565b61028385858561036e565b506001949350505050565b61029882826103cb565b5050565b6060600480546101d190610710565b5f3361025f81858561036e565b5f6102c56006600a61083c565b6102cf908361084a565b90506102db83826103cb565b505050565b6102db83838360016103ff565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610368578181101561035a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036884848484035f6103ff565b50505050565b6001600160a01b03831661039757604051634b637e8f60e11b81525f6004820152602401610351565b6001600160a01b0382166103c05760405163ec442f0560e01b81525f6004820152602401610351565b6102db8383836104d1565b6001600160a01b0382166103f45760405163ec442f0560e01b81525f6004820152602401610351565b6102985f83836104d1565b6001600160a01b0384166104285760405163e602df0560e01b81525f6004820152602401610351565b6001600160a01b03831661045157604051634a1406b160e11b81525f6004820152602401610351565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561036857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c391815260200190565b60405180910390a350505050565b6001600160a01b0383166104fb578060025f8282546104f09190610861565b9091555061056b9050565b6001600160a01b0383165f908152602081905260409020548181101561054d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610351565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610587576002805482900390556105a5565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105ea91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561062357858101830151858201604001528201610607565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610659575f80fd5b919050565b5f806040838503121561066f575f80fd5b61067883610643565b946020939093013593505050565b5f805f60608486031215610698575f80fd5b6106a184610643565b92506106af60208501610643565b9150604084013590509250925092565b5f602082840312156106cf575f80fd5b6106d882610643565b9392505050565b5f80604083850312156106f0575f80fd5b6106f983610643565b915061070760208401610643565b90509250929050565b600181811c9082168061072457607f821691505b60208210810361074257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b600181815b8085111561079657815f190482111561077c5761077c610748565b8085161561078957918102915b93841c9390800290610761565b509250929050565b5f826107ac57506001610265565b816107b857505f610265565b81600181146107ce57600281146107d8576107f4565b6001915050610265565b60ff8411156107e9576107e9610748565b50506001821b610265565b5060208310610133831016604e8410600b8410161715610817575081810a610265565b610821838361075c565b805f190482111561083457610834610748565b029392505050565b5f6106d860ff84168361079e565b808202811582820484141761026557610265610748565b808201808211156102655761026561074856fea2646970667358221220b27cab79b836172d0ba2673a9c2e69c1655d18fe9681a2db342ac8446717d00a64736f6c63430008180033";

  
      type MockUSDCConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: MockUSDCConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class MockUSDC__factory extends ContractFactory {
    
      constructor(...args: MockUSDCConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): MockUSDC__factory {
      return super.connect(runner) as MockUSDC__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MockUSDCInterface {
      return new Interface(_abi) as MockUSDCInterface;
    }
    
    override attach(address: string | Addressable): MockUSDC {
      return super.attach(address) as MockUSDC;
    }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
      return new Contract(address, _abi, runner) as unknown as MockUSDC;
    }
  }

  
  