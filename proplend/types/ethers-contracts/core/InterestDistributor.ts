/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumberish, BytesLike, FunctionFragment, Result, Interface, EventFragment, AddressLike, ContractRunner, ContractMethod, Listener } from "ethers"
import type { TypedContractEvent, TypedDeferredTopicFilter, TypedEventLog, TypedLogDescription, TypedListener, TypedContractMethod } from "../common.js"
  

  export interface InterestDistributorInterface extends Interface {
    getFunction(nameOrSignature: "DEFAULT_ADMIN_ROLE" | "OPERATOR_ROLE" | "PERCENTAGE_DIVISOR" | "PLATFORM_MARGIN" | "SECONDS_PER_YEAR" | "SENIOR_TARGET_APY" | "calculateDistribution" | "calculatePlatformMargin" | "calculateSeniorMonthlyInterest" | "distributeInterest" | "getDistributionStats" | "getRoleAdmin" | "grantRole" | "hasRole" | "lendingPool" | "platformTreasury" | "renounceRole" | "revokeRole" | "setLendingPool" | "supportsInterface" | "totalJuniorPaid" | "totalPlatformPaid" | "totalSeniorPaid" | "updatePlatformTreasury" | "usdc"): FunctionFragment;

    getEvent(nameOrSignatureOrTopic: "InterestDistributed" | "PlatformTreasuryUpdated" | "RoleAdminChanged" | "RoleGranted" | "RoleRevoked"): EventFragment;

    encodeFunctionData(functionFragment: 'DEFAULT_ADMIN_ROLE', values?: undefined): string;
encodeFunctionData(functionFragment: 'OPERATOR_ROLE', values?: undefined): string;
encodeFunctionData(functionFragment: 'PERCENTAGE_DIVISOR', values?: undefined): string;
encodeFunctionData(functionFragment: 'PLATFORM_MARGIN', values?: undefined): string;
encodeFunctionData(functionFragment: 'SECONDS_PER_YEAR', values?: undefined): string;
encodeFunctionData(functionFragment: 'SENIOR_TARGET_APY', values?: undefined): string;
encodeFunctionData(functionFragment: 'calculateDistribution', values: [BigNumberish, BigNumberish, BigNumberish]): string;
encodeFunctionData(functionFragment: 'calculatePlatformMargin', values: [BigNumberish]): string;
encodeFunctionData(functionFragment: 'calculateSeniorMonthlyInterest', values: [BigNumberish]): string;
encodeFunctionData(functionFragment: 'distributeInterest', values: [BigNumberish, BigNumberish, BigNumberish]): string;
encodeFunctionData(functionFragment: 'getDistributionStats', values?: undefined): string;
encodeFunctionData(functionFragment: 'getRoleAdmin', values: [BytesLike]): string;
encodeFunctionData(functionFragment: 'grantRole', values: [BytesLike, AddressLike]): string;
encodeFunctionData(functionFragment: 'hasRole', values: [BytesLike, AddressLike]): string;
encodeFunctionData(functionFragment: 'lendingPool', values?: undefined): string;
encodeFunctionData(functionFragment: 'platformTreasury', values?: undefined): string;
encodeFunctionData(functionFragment: 'renounceRole', values: [BytesLike, AddressLike]): string;
encodeFunctionData(functionFragment: 'revokeRole', values: [BytesLike, AddressLike]): string;
encodeFunctionData(functionFragment: 'setLendingPool', values: [AddressLike]): string;
encodeFunctionData(functionFragment: 'supportsInterface', values: [BytesLike]): string;
encodeFunctionData(functionFragment: 'totalJuniorPaid', values?: undefined): string;
encodeFunctionData(functionFragment: 'totalPlatformPaid', values?: undefined): string;
encodeFunctionData(functionFragment: 'totalSeniorPaid', values?: undefined): string;
encodeFunctionData(functionFragment: 'updatePlatformTreasury', values: [AddressLike]): string;
encodeFunctionData(functionFragment: 'usdc', values?: undefined): string;

    decodeFunctionResult(functionFragment: 'DEFAULT_ADMIN_ROLE', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'OPERATOR_ROLE', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'PERCENTAGE_DIVISOR', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'PLATFORM_MARGIN', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'SECONDS_PER_YEAR', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'SENIOR_TARGET_APY', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'calculateDistribution', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'calculatePlatformMargin', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'calculateSeniorMonthlyInterest', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'distributeInterest', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'getDistributionStats', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'getRoleAdmin', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'grantRole', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'hasRole', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'lendingPool', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'platformTreasury', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'renounceRole', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'revokeRole', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'setLendingPool', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'supportsInterface', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'totalJuniorPaid', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'totalPlatformPaid', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'totalSeniorPaid', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'updatePlatformTreasury', data: BytesLike): Result;
decodeFunctionResult(functionFragment: 'usdc', data: BytesLike): Result;
  }

  
    export namespace InterestDistributedEvent {
      export type InputTuple = [totalAmount: BigNumberish, seniorAmount: BigNumberish, juniorAmount: BigNumberish, platformAmount: BigNumberish];
      export type OutputTuple = [totalAmount: bigint, seniorAmount: bigint, juniorAmount: bigint, platformAmount: bigint];
      export interface OutputObject {totalAmount: bigint, seniorAmount: bigint, juniorAmount: bigint, platformAmount: bigint };
      export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
      export type Filter = TypedDeferredTopicFilter<Event>
      export type Log = TypedEventLog<Event>
      export type LogDescription = TypedLogDescription<Event>
    }

  

    export namespace PlatformTreasuryUpdatedEvent {
      export type InputTuple = [oldTreasury: AddressLike, newTreasury: AddressLike];
      export type OutputTuple = [oldTreasury: string, newTreasury: string];
      export interface OutputObject {oldTreasury: string, newTreasury: string };
      export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
      export type Filter = TypedDeferredTopicFilter<Event>
      export type Log = TypedEventLog<Event>
      export type LogDescription = TypedLogDescription<Event>
    }

  

    export namespace RoleAdminChangedEvent {
      export type InputTuple = [role: BytesLike, previousAdminRole: BytesLike, newAdminRole: BytesLike];
      export type OutputTuple = [role: string, previousAdminRole: string, newAdminRole: string];
      export interface OutputObject {role: string, previousAdminRole: string, newAdminRole: string };
      export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
      export type Filter = TypedDeferredTopicFilter<Event>
      export type Log = TypedEventLog<Event>
      export type LogDescription = TypedLogDescription<Event>
    }

  

    export namespace RoleGrantedEvent {
      export type InputTuple = [role: BytesLike, account: AddressLike, sender: AddressLike];
      export type OutputTuple = [role: string, account: string, sender: string];
      export interface OutputObject {role: string, account: string, sender: string };
      export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
      export type Filter = TypedDeferredTopicFilter<Event>
      export type Log = TypedEventLog<Event>
      export type LogDescription = TypedLogDescription<Event>
    }

  

    export namespace RoleRevokedEvent {
      export type InputTuple = [role: BytesLike, account: AddressLike, sender: AddressLike];
      export type OutputTuple = [role: string, account: string, sender: string];
      export interface OutputObject {role: string, account: string, sender: string };
      export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
      export type Filter = TypedDeferredTopicFilter<Event>
      export type Log = TypedEventLog<Event>
      export type LogDescription = TypedLogDescription<Event>
    }

  

  export interface InterestDistributor extends BaseContract {
    
    connect(runner?: ContractRunner | null): InterestDistributor;
    waitForDeployment(): Promise<this>;

    interface: InterestDistributorInterface;

    
  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(event: TCEvent, listener: TypedListener<TCEvent>): Promise<this>
  on<TCEvent extends TypedContractEvent>(filter: TypedDeferredTopicFilter<TCEvent>, listener: TypedListener<TCEvent>): Promise<this>
  
  once<TCEvent extends TypedContractEvent>(event: TCEvent, listener: TypedListener<TCEvent>): Promise<this>
  once<TCEvent extends TypedContractEvent>(filter: TypedDeferredTopicFilter<TCEvent>, listener: TypedListener<TCEvent>): Promise<this>

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>
  removeAllListeners<TCEvent extends TypedContractEvent>(event?: TCEvent): Promise<this>


    
    
    DEFAULT_ADMIN_ROLE: TypedContractMethod<
      [],
      [string],
      'view'
    >
    

    
    OPERATOR_ROLE: TypedContractMethod<
      [],
      [string],
      'view'
    >
    

    
    PERCENTAGE_DIVISOR: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    PLATFORM_MARGIN: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    SECONDS_PER_YEAR: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    SENIOR_TARGET_APY: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    calculateDistribution: TypedContractMethod<
      [totalInterest: BigNumberish, seniorTVL: BigNumberish, juniorTVL: BigNumberish, ],
      [[bigint, bigint, bigint] & {seniorAmount: bigint, juniorAmount: bigint, platformAmount: bigint }],
      'view'
    >
    

    
    calculatePlatformMargin: TypedContractMethod<
      [totalInterest: BigNumberish, ],
      [bigint],
      'view'
    >
    

    
    calculateSeniorMonthlyInterest: TypedContractMethod<
      [seniorTVL: BigNumberish, ],
      [bigint],
      'view'
    >
    

    
    distributeInterest: TypedContractMethod<
      [totalInterest: BigNumberish, seniorTVL: BigNumberish, juniorTVL: BigNumberish, ],
      [[bigint, bigint, bigint] & {seniorAmount: bigint, juniorAmount: bigint, platformAmount: bigint }],
      'nonpayable'
    >
    

    
    getDistributionStats: TypedContractMethod<
      [],
      [[bigint, bigint, bigint] & {senior: bigint, junior: bigint, platform: bigint }],
      'view'
    >
    

    
    getRoleAdmin: TypedContractMethod<
      [role: BytesLike, ],
      [string],
      'view'
    >
    

    
    grantRole: TypedContractMethod<
      [role: BytesLike, account: AddressLike, ],
      [void],
      'nonpayable'
    >
    

    
    hasRole: TypedContractMethod<
      [role: BytesLike, account: AddressLike, ],
      [boolean],
      'view'
    >
    

    
    lendingPool: TypedContractMethod<
      [],
      [string],
      'view'
    >
    

    
    platformTreasury: TypedContractMethod<
      [],
      [string],
      'view'
    >
    

    
    renounceRole: TypedContractMethod<
      [role: BytesLike, callerConfirmation: AddressLike, ],
      [void],
      'nonpayable'
    >
    

    
    revokeRole: TypedContractMethod<
      [role: BytesLike, account: AddressLike, ],
      [void],
      'nonpayable'
    >
    

    
    setLendingPool: TypedContractMethod<
      [_lendingPool: AddressLike, ],
      [void],
      'nonpayable'
    >
    

    
    supportsInterface: TypedContractMethod<
      [interfaceId: BytesLike, ],
      [boolean],
      'view'
    >
    

    
    totalJuniorPaid: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    totalPlatformPaid: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    totalSeniorPaid: TypedContractMethod<
      [],
      [bigint],
      'view'
    >
    

    
    updatePlatformTreasury: TypedContractMethod<
      [_newTreasury: AddressLike, ],
      [void],
      'nonpayable'
    >
    

    
    usdc: TypedContractMethod<
      [],
      [string],
      'view'
    >
    


    getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T;

    getFunction(nameOrSignature: 'DEFAULT_ADMIN_ROLE'): TypedContractMethod<
      [],
      [string],
      'view'
    >;
getFunction(nameOrSignature: 'OPERATOR_ROLE'): TypedContractMethod<
      [],
      [string],
      'view'
    >;
getFunction(nameOrSignature: 'PERCENTAGE_DIVISOR'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'PLATFORM_MARGIN'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'SECONDS_PER_YEAR'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'SENIOR_TARGET_APY'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'calculateDistribution'): TypedContractMethod<
      [totalInterest: BigNumberish, seniorTVL: BigNumberish, juniorTVL: BigNumberish, ],
      [[bigint, bigint, bigint] & {seniorAmount: bigint, juniorAmount: bigint, platformAmount: bigint }],
      'view'
    >;
getFunction(nameOrSignature: 'calculatePlatformMargin'): TypedContractMethod<
      [totalInterest: BigNumberish, ],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'calculateSeniorMonthlyInterest'): TypedContractMethod<
      [seniorTVL: BigNumberish, ],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'distributeInterest'): TypedContractMethod<
      [totalInterest: BigNumberish, seniorTVL: BigNumberish, juniorTVL: BigNumberish, ],
      [[bigint, bigint, bigint] & {seniorAmount: bigint, juniorAmount: bigint, platformAmount: bigint }],
      'nonpayable'
    >;
getFunction(nameOrSignature: 'getDistributionStats'): TypedContractMethod<
      [],
      [[bigint, bigint, bigint] & {senior: bigint, junior: bigint, platform: bigint }],
      'view'
    >;
getFunction(nameOrSignature: 'getRoleAdmin'): TypedContractMethod<
      [role: BytesLike, ],
      [string],
      'view'
    >;
getFunction(nameOrSignature: 'grantRole'): TypedContractMethod<
      [role: BytesLike, account: AddressLike, ],
      [void],
      'nonpayable'
    >;
getFunction(nameOrSignature: 'hasRole'): TypedContractMethod<
      [role: BytesLike, account: AddressLike, ],
      [boolean],
      'view'
    >;
getFunction(nameOrSignature: 'lendingPool'): TypedContractMethod<
      [],
      [string],
      'view'
    >;
getFunction(nameOrSignature: 'platformTreasury'): TypedContractMethod<
      [],
      [string],
      'view'
    >;
getFunction(nameOrSignature: 'renounceRole'): TypedContractMethod<
      [role: BytesLike, callerConfirmation: AddressLike, ],
      [void],
      'nonpayable'
    >;
getFunction(nameOrSignature: 'revokeRole'): TypedContractMethod<
      [role: BytesLike, account: AddressLike, ],
      [void],
      'nonpayable'
    >;
getFunction(nameOrSignature: 'setLendingPool'): TypedContractMethod<
      [_lendingPool: AddressLike, ],
      [void],
      'nonpayable'
    >;
getFunction(nameOrSignature: 'supportsInterface'): TypedContractMethod<
      [interfaceId: BytesLike, ],
      [boolean],
      'view'
    >;
getFunction(nameOrSignature: 'totalJuniorPaid'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'totalPlatformPaid'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'totalSeniorPaid'): TypedContractMethod<
      [],
      [bigint],
      'view'
    >;
getFunction(nameOrSignature: 'updatePlatformTreasury'): TypedContractMethod<
      [_newTreasury: AddressLike, ],
      [void],
      'nonpayable'
    >;
getFunction(nameOrSignature: 'usdc'): TypedContractMethod<
      [],
      [string],
      'view'
    >;

    getEvent(key: 'InterestDistributed'): TypedContractEvent<InterestDistributedEvent.InputTuple, InterestDistributedEvent.OutputTuple, InterestDistributedEvent.OutputObject>;
getEvent(key: 'PlatformTreasuryUpdated'): TypedContractEvent<PlatformTreasuryUpdatedEvent.InputTuple, PlatformTreasuryUpdatedEvent.OutputTuple, PlatformTreasuryUpdatedEvent.OutputObject>;
getEvent(key: 'RoleAdminChanged'): TypedContractEvent<RoleAdminChangedEvent.InputTuple, RoleAdminChangedEvent.OutputTuple, RoleAdminChangedEvent.OutputObject>;
getEvent(key: 'RoleGranted'): TypedContractEvent<RoleGrantedEvent.InputTuple, RoleGrantedEvent.OutputTuple, RoleGrantedEvent.OutputObject>;
getEvent(key: 'RoleRevoked'): TypedContractEvent<RoleRevokedEvent.InputTuple, RoleRevokedEvent.OutputTuple, RoleRevokedEvent.OutputObject>;

    filters: {
      
      'InterestDistributed(uint256,uint256,uint256,uint256)': TypedContractEvent<InterestDistributedEvent.InputTuple, InterestDistributedEvent.OutputTuple, InterestDistributedEvent.OutputObject>;
      InterestDistributed: TypedContractEvent<InterestDistributedEvent.InputTuple, InterestDistributedEvent.OutputTuple, InterestDistributedEvent.OutputObject>;
    

      'PlatformTreasuryUpdated(address,address)': TypedContractEvent<PlatformTreasuryUpdatedEvent.InputTuple, PlatformTreasuryUpdatedEvent.OutputTuple, PlatformTreasuryUpdatedEvent.OutputObject>;
      PlatformTreasuryUpdated: TypedContractEvent<PlatformTreasuryUpdatedEvent.InputTuple, PlatformTreasuryUpdatedEvent.OutputTuple, PlatformTreasuryUpdatedEvent.OutputObject>;
    

      'RoleAdminChanged(bytes32,bytes32,bytes32)': TypedContractEvent<RoleAdminChangedEvent.InputTuple, RoleAdminChangedEvent.OutputTuple, RoleAdminChangedEvent.OutputObject>;
      RoleAdminChanged: TypedContractEvent<RoleAdminChangedEvent.InputTuple, RoleAdminChangedEvent.OutputTuple, RoleAdminChangedEvent.OutputObject>;
    

      'RoleGranted(bytes32,address,address)': TypedContractEvent<RoleGrantedEvent.InputTuple, RoleGrantedEvent.OutputTuple, RoleGrantedEvent.OutputObject>;
      RoleGranted: TypedContractEvent<RoleGrantedEvent.InputTuple, RoleGrantedEvent.OutputTuple, RoleGrantedEvent.OutputObject>;
    

      'RoleRevoked(bytes32,address,address)': TypedContractEvent<RoleRevokedEvent.InputTuple, RoleRevokedEvent.OutputTuple, RoleRevokedEvent.OutputObject>;
      RoleRevoked: TypedContractEvent<RoleRevokedEvent.InputTuple, RoleRevokedEvent.OutputTuple, RoleRevokedEvent.OutputObject>;
    
    };
  }