name: Smart Contract Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'contracts/**'
      - 'test/**'
      - 'hardhat.config.ts'
      - 'package.json'
      - '.github/workflows/contract-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'contracts/**'
      - 'test/**'
      - 'hardhat.config.ts'
      - 'package.json'

jobs:
  test:
    name: Run Contract Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Compile contracts
        run: pnpm hardhat compile

      - name: 🧪 Run tests
        run: pnpm hardhat test

      - name: 📊 Generate coverage report
        run: pnpm hardhat coverage
        continue-on-error: true

      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: smart-contracts
          name: contract-coverage
        continue-on-error: true

  lint:
    name: Lint Solidity Contracts
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Lint contracts
        run: pnpm hardhat check

  security:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔒 Run Slither security analysis
        uses: crytic/slither-action@v0.4.0
        continue-on-error: true
        with:
          target: 'contracts/'
          slither-args: '--exclude-dependencies'

  gas-report:
    name: Gas Report
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ⛽ Generate gas report
        run: REPORT_GAS=true pnpm hardhat test
        env:
          COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}

      - name: 💬 Comment gas report on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const gasReport = fs.readFileSync('./gas-report.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ⛽ Gas Report\n\n\`\`\`\n${gasReport}\n\`\`\``
            });
        continue-on-error: true
